/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Service API
 * The Kubernetes Service API provides services that allows provisioning and life cycle management of Kubernetes clusters. The API is logically composed of authentication services, platform provider specific calls to get a set of resource types that can be then used by abstract Kubernetes Service resources to create and manage Kubernetes clusters. Requests must specify the HTML content type header.
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Image version metadata.
 * @export
 * @interface OpenstackImageVersions
 */
export interface OpenstackImageVersions {
    /**
     * The kubernetes semantic version.  This should be used directly when specifying
     * Kubernetes control planes and workload pools in a cluster specification.
     * @type {string}
     * @memberof OpenstackImageVersions
     */
    kubernetes: string;
    /**
     * The nvidia driver version.
     * @type {string}
     * @memberof OpenstackImageVersions
     */
    nvidiaDriver: string;
}

/**
 * Check if a given object implements the OpenstackImageVersions interface.
 */
export function instanceOfOpenstackImageVersions(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "kubernetes" in value;
    isInstance = isInstance && "nvidiaDriver" in value;

    return isInstance;
}

export function OpenstackImageVersionsFromJSON(json: any): OpenstackImageVersions {
    return OpenstackImageVersionsFromJSONTyped(json, false);
}

export function OpenstackImageVersionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenstackImageVersions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kubernetes': json['kubernetes'],
        'nvidiaDriver': json['nvidiaDriver'],
    };
}

export function OpenstackImageVersionsToJSON(value?: OpenstackImageVersions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'kubernetes': value.kubernetes,
        'nvidiaDriver': value.nvidiaDriver,
    };
}

