/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Service API
 * The Kubernetes Service API provides services that allows provisioning and life cycle management of Kubernetes clusters. The API is logically composed of authentication services, platform provider specific calls to get a set of resource types that can be then used by abstract Kubernetes Service resources to create and manage Kubernetes clusters. Requests must specify the HTML content type header.
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A set of optional add on features for the cluster.
 * @export
 * @interface KubernetesClusterFeatures
 */
export interface KubernetesClusterFeatures {
    /**
     * Enable auto-scaling.
     * @type {boolean}
     * @memberof KubernetesClusterFeatures
     */
    autoscaling?: boolean;
    /**
     * Enable an ingress controller.
     * @type {boolean}
     * @memberof KubernetesClusterFeatures
     */
    ingress?: boolean;
    /**
     * Enable cert-manager.
     * @type {boolean}
     * @memberof KubernetesClusterFeatures
     */
    certManager?: boolean;
    /**
     * Enable the Kubernetes dashboard.  Requires ingress and certManager to be enabled.
     * @type {boolean}
     * @memberof KubernetesClusterFeatures
     */
    kubernetesDashboard?: boolean;
    /**
     * Enable POSIX file based persistent storage (Longhorn).
     * @type {boolean}
     * @memberof KubernetesClusterFeatures
     */
    fileStorage?: boolean;
    /**
     * Enable Prometheus.
     * @type {boolean}
     * @memberof KubernetesClusterFeatures
     */
    prometheus?: boolean;
    /**
     * Install the NVIDIA Operator
     * @type {boolean}
     * @memberof KubernetesClusterFeatures
     */
    nvidiaOperator?: boolean;
}

/**
 * Check if a given object implements the KubernetesClusterFeatures interface.
 */
export function instanceOfKubernetesClusterFeatures(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function KubernetesClusterFeaturesFromJSON(json: any): KubernetesClusterFeatures {
    return KubernetesClusterFeaturesFromJSONTyped(json, false);
}

export function KubernetesClusterFeaturesFromJSONTyped(json: any, ignoreDiscriminator: boolean): KubernetesClusterFeatures {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'autoscaling': !exists(json, 'autoscaling') ? undefined : json['autoscaling'],
        'ingress': !exists(json, 'ingress') ? undefined : json['ingress'],
        'certManager': !exists(json, 'certManager') ? undefined : json['certManager'],
        'kubernetesDashboard': !exists(json, 'kubernetesDashboard') ? undefined : json['kubernetesDashboard'],
        'fileStorage': !exists(json, 'fileStorage') ? undefined : json['fileStorage'],
        'prometheus': !exists(json, 'prometheus') ? undefined : json['prometheus'],
        'nvidiaOperator': !exists(json, 'nvidiaOperator') ? undefined : json['nvidiaOperator'],
    };
}

export function KubernetesClusterFeaturesToJSON(value?: KubernetesClusterFeatures | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'autoscaling': value.autoscaling,
        'ingress': value.ingress,
        'certManager': value.certManager,
        'kubernetesDashboard': value.kubernetesDashboard,
        'fileStorage': value.fileStorage,
        'prometheus': value.prometheus,
        'nvidiaOperator': value.nvidiaOperator,
    };
}

