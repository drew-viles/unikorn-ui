/* tslint:disable */
/* eslint-disable */
/**
 * Kubernetes Service API
 * The Kubernetes Service API provides services that allows provisioning and life cycle management of Kubernetes clusters. The API is logically composed of authentication services, platform provider specific calls to get a set of resource types that can be then used by abstract Kubernetes Service resources to create and manage Kubernetes clusters. Requests must specify the HTML content type header.
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AutoUpgradeDaysOfWeek } from './AutoUpgradeDaysOfWeek';
import {
    AutoUpgradeDaysOfWeekFromJSON,
    AutoUpgradeDaysOfWeekFromJSONTyped,
    AutoUpgradeDaysOfWeekToJSON,
} from './AutoUpgradeDaysOfWeek';

/**
 * When specified, enables auto upgrade of application bundles. All resources will be
 * automatically upgraded if the currently selected bundle is end of life.
 * @export
 * @interface ApplicationBundleAutoUpgrade
 */
export interface ApplicationBundleAutoUpgrade {
    /**
     * 
     * @type {AutoUpgradeDaysOfWeek}
     * @memberof ApplicationBundleAutoUpgrade
     */
    daysOfWeek?: AutoUpgradeDaysOfWeek;
}

/**
 * Check if a given object implements the ApplicationBundleAutoUpgrade interface.
 */
export function instanceOfApplicationBundleAutoUpgrade(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ApplicationBundleAutoUpgradeFromJSON(json: any): ApplicationBundleAutoUpgrade {
    return ApplicationBundleAutoUpgradeFromJSONTyped(json, false);
}

export function ApplicationBundleAutoUpgradeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApplicationBundleAutoUpgrade {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'daysOfWeek': !exists(json, 'daysOfWeek') ? undefined : AutoUpgradeDaysOfWeekFromJSON(json['daysOfWeek']),
    };
}

export function ApplicationBundleAutoUpgradeToJSON(value?: ApplicationBundleAutoUpgrade | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'daysOfWeek': AutoUpgradeDaysOfWeekToJSON(value.daysOfWeek),
    };
}

